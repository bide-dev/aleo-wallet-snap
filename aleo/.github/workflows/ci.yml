name: CI
on:
  pull_request:
  push:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - 'documentation/**'
      - '*.md'
      - '**/*.md'

env:
  RUST_BACKTRACE: 1

jobs:
  style:
    name: Check Style
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt

      - name: cargo fmt --check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
#    env:
#      RUSTFLAGS: -Dwarnings
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy

      - name: Check examples
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --examples --all

      - name: Check examples with all features on stable
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --examples --all-features --all

      - name: Check benchmarks on nightly
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features --examples --all --benches

  test-wasm:
    name: WASM Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Rust (nightly)
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          target: wasm32-unknown-unknown
          override: true

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-wasm-${{ hashFiles('**/Cargo.lock') }}

      - uses: jetli/wasm-pack-action@v0.3.0
        with:
          version: 'latest'

      - name: Test
        run: |
          cd wasm
          wasm-pack test --node
  #          cargo test --target wasm32-unknown-unknown --features wasm

